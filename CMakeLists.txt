cmake_minimum_required(VERSION 3.16)
project(mirrt_star)

find_package(graph_core REQUIRED)

add_library(${PROJECT_NAME} SHARED
  src/${PROJECT_NAME}/solvers/mirrt_star.cpp
  src/${PROJECT_NAME}/plugins/solvers/mirrt_star_plugin.cpp
  src/${PROJECT_NAME}/multi_goal_selection/goal_selection_manager.cpp
  )
target_include_directories(${PROJECT_NAME}
PUBLIC
  $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include> #if BUILD_INTERFACE, add ${CMAKE_SOURCE_DIR}/include (headers taken by source directory)
  $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}/include> #if BUILD_INTERFACE, add ${CMAKE_SOURCE_DIR}/include (headers taken by autogenerated commands)
  $<INSTALL_INTERFACE:include> # if INSTALL_INTERFACE, add header from install path
PRIVATE
  ${CMAKE_CURRENT_SOURCE_DIR}
)
target_link_libraries(${PROJECT_NAME} PUBLIC
  graph_core::graph_core
)

set_target_properties(${PROJECT_NAME} PROPERTIES
            CXX_STANDARD 20
            CMAKE_CXX_STANDARD_REQUIRED ON
            CXX_EXTENSIONS OFF
            )
target_compile_options(${PROJECT_NAME} PRIVATE
  -funroll-loops -Ofast
  )

## Install
install(DIRECTORY include/${PROJECT_NAME}
 DESTINATION include)

install(
 TARGETS ${PROJECT_NAME}
 EXPORT ${PROJECT_NAME}Targets
 ARCHIVE DESTINATION lib
 LIBRARY DESTINATION lib
 RUNTIME DESTINATION bin
)

install(EXPORT ${PROJECT_NAME}Targets
  DESTINATION "share/${PROJECT_NAME}/cmake"
  NAMESPACE ${PROJECT_NAME}::
  FILE ${PROJECT_NAME}Targets.cmake
)

include(CMakePackageConfigHelpers)
include(GNUInstallDirs)

write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
  VERSION 0.0.1
  COMPATIBILITY AnyNewerVersion)
configure_package_config_file(
  ${CMAKE_SOURCE_DIR}/cmake_config/${PROJECT_NAME}Config.cmake.in ${PROJECT_NAME}Config.cmake
  INSTALL_DESTINATION share/${PROJECT_NAME}/cmake
  PATH_VARS CMAKE_INSTALL_INCLUDEDIR CMAKE_INSTALL_LIBDIR
  )

#set(EXPORT_CONFIGDIR "share/${PROJECT_NAME}/cmake")

install(FILES
    ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake
    ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
    DESTINATION "share/${PROJECT_NAME}/cmake")

#set(EXPORT_CONFIGDIR "share/${PROJECT_NAME}/cmake")

#export(
#  EXPORT mirrt_starTargets
#  FILE "${PROJECT_BINARY_DIR}/mirrt_starTargets.cmake")

#include(CMakePackageConfigHelpers)
#set(INCLUDE_DIR include)
#configure_package_config_file(${CMAKE_CURRENT_LIST_DIR}/mirrt_starConfig.cmake.in
#  ${CMAKE_CURRENT_BINARY_DIR}/mirrt_starConfig.cmake
#  INSTALL_DESTINATION ${EXPORT_CONFIGDIR})
#write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/mirrt_starConfigVersion.cmake
#  VERSION 0.0.1
#  COMPATIBILITY AnyNewerVersion)

#install(FILES
#  ${CMAKE_CURRENT_BINARY_DIR}/mirrt_starConfig.cmake
#  ${CMAKE_CURRENT_BINARY_DIR}/mirrt_starConfigVersion.cmake
#  DESTINATION ${EXPORT_CONFIGDIR})
